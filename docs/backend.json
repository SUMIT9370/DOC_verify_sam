{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user within the DocVerify system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "userType": {
          "type": "string",
          "description": "Type of user (student, university, company)."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "displayName": {
          "type": "string",
          "description": "User's display name."
        },
        "photoURL": {
          "type": "string",
          "description": "URL of the user's profile picture.",
          "format": "uri"
        },
        "uid": {
          "type": "string",
          "description": "The Firebase user ID."
        },
        "isAdmin": {
            "type": "boolean",
            "description": "Indicates if the user has administrative privileges."
        }
      },
      "required": [
        "id",
        "userType",
        "email",
        "displayName",
        "uid"
      ]
    },
    "Document": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Document",
      "type": "object",
      "description": "Represents a document uploaded for verification.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the document."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who uploaded the document. (Relationship: User 1:N Document)"
        },
        "uploadDate": {
          "type": "string",
          "description": "Date and time when the document was uploaded.",
          "format": "date-time"
        },
        "documentName": {
          "type": "string",
          "description": "Name of the document."
        },
        "documentType": {
          "type": "string",
          "description": "Type of the document (e.g., certificate, degree)."
        },
        "fileLocation": {
          "type": "string",
          "description": "Storage location of the document file."
        }
      },
      "required": [
        "id",
        "userId",
        "uploadDate",
        "documentName",
        "documentType",
        "fileLocation"
      ]
    },
    "EducationalDocument": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "EducationalDocument",
      "type": "object",
      "description": "Represents an educational document master template with a flexible data structure.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the document master."
        },
        "documentType": {
          "type": "string",
          "description": "The type of document as identified by the AI (e.g. 'Degree Certificate', 'Income Certificate')."
        },
        "documentData": {
          "type": "object",
          "description": "A flexible object to store the key-value pairs extracted by the AI, which will vary based on the document type."
        },
        "extractedText": {
          "type": "string",
          "description": "Full text extracted from the document by OCR."
        },
        "documentDataUri": {
          "type": "string",
          "description": "The full Data URI of the uploaded document image."
        }
      },
      "required": [
        "documentType",
        "documentData"
      ]
    },
    "VerificationCheck": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "VerificationCheck",
      "type": "object",
      "description": "Represents a single verification check performed on a document.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the verification check."
        },
        "documentId": {
          "type": "string",
          "description": "Reference to the Document being checked. (Relationship: Document 1:N VerificationCheck)"
        },
        "checkDate": {
          "type": "string",
          "description": "Date and time when the verification check was performed.",
          "format": "date-time"
        },
        "ocrText": {
          "type": "string",
          "description": "Extracted text from the document image using OCR."
        },
        "qrVerificationResult": {
          "type": "boolean",
          "description": "Result of the QR code verification (true if valid, false otherwise)."
        },
        "textAlignmentResult": {
          "type": "boolean",
          "description": "Result of the text alignment check (true if aligned, false otherwise)."
        },
        "watermarkDetected": {
          "type": "boolean",
          "description": "Indicates if a watermark was detected (true if detected, false otherwise)."
        },
        "hallmarkDetected": {
          "type": "boolean",
          "description": "Indicates if a hallmark was detected (true if detected, false otherwise)."
        },
        "databaseVerificationResult": {
          "type": "boolean",
          "description": "Result of the database verification check (true if found, false otherwise)."
        }
      },
      "required": [
        "id",
        "documentId",
        "checkDate",
        "ocrText",
        "qrVerificationResult",
        "textAlignmentResult",
        "watermarkDetected",
        "hallmarkDetected",
        "databaseVerificationResult"
      ]
    },
    "AdminDashboard": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AdminDashboard",
      "type": "object",
      "description": "Represents document statistics for admin use.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Admin Dashboard."
        },
        "totalDocumentCompared": {
          "type": "number",
          "description": "Total number of documents compared so far"
        },
        "totalNewDocumentsAdded": {
          "type": "number",
          "description": "Total number of new documents added."
        },
        "dateCreated": {
          "type": "string",
          "description": "Date and time when the dashboard was first created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "totalDocumentCompared",
        "totalNewDocumentsAdded",
        "dateCreated"
      ]
    },
    "VerificationHistory": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "VerificationHistory",
      "type": "object",
      "description": "Represents a single document verification history record for a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the history record."
        },
        "documentName": {
          "type": "string",
          "description": "The name of the verified document."
        },
        "documentUrl": {
          "type": "string",
          "description": "The Base64 encoded Data URI of the uploaded document image."
        },
        "isAuthentic": {
          "type": "boolean",
          "description": "The result of the verification (true if authentic, false otherwise)."
        },
        "verificationDetails": {
          "type": "string",
          "description": "A summary of the verification findings."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the verification was performed.",
          "format": "date-time"
        }
      },
      "required": [
        "documentName",
        "documentUrl",
        "isAuthentic",
        "verificationDetails",
        "timestamp"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Access control is based on the `userId`. Includes the Firebase `uid` for authentication purposes.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/verification_history/{historyId}",
        "definition": {
          "entityName": "VerificationHistory",
          "schema": {
            "$ref": "#/backend/entities/VerificationHistory"
          },
          "description": "Stores verification history for a user. Access is restricted to the user who owns the history.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "historyId",
              "description": "The unique identifier for the history record."
            }
          ]
        }
      },
      {
        "path": "/document_masters/{masterId}",
        "definition": {
          "entityName": "EducationalDocument",
          "schema": {
            "$ref": "#/backend/entities/EducationalDocument"
          },
          "description": "Stores master document templates uploaded by admins. Access is restricted to admins.",
          "params": [
            {
              "name": "masterId",
              "description": "The unique identifier for the master document."
            }
          ]
        }
      },
      {
        "path": "/admin_dashboards/{dashboardId}",
        "definition": {
          "entityName": "AdminDashboard",
          "schema": {
            "$ref": "#/backend/entities/AdminDashboard"
          },
          "description": "Stores admin dashboard data. Access to this collection is restricted to users with admin privileges.",
          "params": [
            {
              "name": "dashboardId",
              "description": "Unique identifier for the admin dashboard."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support DocVerify's document verification process for students, universities, and companies, focusing on secure authentication and efficient data management. It incorporates denormalization to ensure authorization independence and facilitate atomic operations. The structure utilizes path-based ownership and membership maps for access control.\n\n**Authorization Independence:**\n\n*   User documents are stored directly under `/users/{userId}`, enabling straightforward, path-based access control.\n*   Verification history is stored under `/users/{userId}/verification_history/{historyId}`. This path-based ownership ensures a user can only access their own history.\n*   Master documents are stored in `/document_masters/{masterId}`. This top-level collection is secured by rules that only allow admin access.\n\n**QAPs (Rules are not Filters):**\n\n*   Data segregation: Each user type (student, university, company) has its own dedicated space under `/users/{userId}`, ensuring that different user types do not share the same collections and associated security rules. This segregation is also applied at the subcollection level (e.g., documents, verification checks).\n\n**Admin Dashboard:**\n\n*   AdminDashboard documents are stored in the `/admin_dashboards/{dashboardId}` collection.  Access to this collection is restricted to users with admin privileges, verified by checking the `isAdmin` flag on their user profile."
  }
}
